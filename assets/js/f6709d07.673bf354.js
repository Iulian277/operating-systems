"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[27938],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,k=s["".concat(u,".").concat(m)]||s[m]||d[m]||i;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},24417:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},l="Similarities Between the TCBs of `libult` and Unikraft",o={unversionedId:"Lab/Compute/Overview/quiz/tcb-libult-unikraft",id:"Lab/Compute/Overview/quiz/tcb-libult-unikraft",title:"Similarities Between the TCBs of `libult` and Unikraft",description:"Question Text",source:"@site/docs/Lab/Compute/Overview/quiz/tcb-libult-unikraft.md",sourceDirName:"Lab/Compute/Overview/quiz",slug:"/Lab/Compute/Overview/quiz/tcb-libult-unikraft",permalink:"/operating-systems/Lab/Compute/Overview/quiz/tcb-libult-unikraft",draft:!1,tags:[],version:"current",frontMatter:{}},u={},p=[{value:"Question Text",id:"question-text",level:2},{value:"Question Answers",id:"question-answers",level:2},{value:"Feedback",id:"feedback",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"similarities-between-the-tcbs-of-libult-and-unikraft"},"Similarities Between the TCBs of ",(0,a.kt)("inlineCode",{parentName:"h1"},"libult")," and Unikraft"),(0,a.kt)("h2",{id:"question-text"},"Question Text"),(0,a.kt)("p",null,"Which members of the TCBs in ",(0,a.kt)("inlineCode",{parentName:"p"},"libult")," and Unikraft have similar meanings?"),(0,a.kt)("h2",{id:"question-answers"},"Question Answers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start_routine")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"entry"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"id")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"name"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context.uc_stack")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"stack"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"arguments")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"flags")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"has_dynamic_stack")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"detached"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"argument")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"arg"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"sched")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"tls"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"context")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"ctx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"return_value")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"prv"))),(0,a.kt)("h2",{id:"feedback"},"Feedback"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"start_routine")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"entry")," are the functions that run in the newly created threads.\n",(0,a.kt)("inlineCode",{parentName:"p"},"context.uc_stack")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"stack")," are pointers to the stack of the newly created threads.\n",(0,a.kt)("inlineCode",{parentName:"p"},"argument")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"arg")," are pointers to the arguments of ",(0,a.kt)("inlineCode",{parentName:"p"},"start_routine")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"entry"),", respectively.\n",(0,a.kt)("inlineCode",{parentName:"p"},"context")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ctx")," are the contexts in which the new threads run.\n",(0,a.kt)("inlineCode",{parentName:"p"},"return_value")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"prv")," are both pointers to the values returned by the thread functions."))}d.isMDXComponent=!0}}]);